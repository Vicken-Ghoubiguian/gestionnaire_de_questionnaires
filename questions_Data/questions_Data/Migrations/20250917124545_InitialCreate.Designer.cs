// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using questions_Data.EF;

#nullable disable

namespace questions_Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917124545_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("questions_Data.Domain.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#FF5733",
                            Libelle = "Mathématiques"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#33FF57",
                            Libelle = "Histoire"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#3357FF",
                            Libelle = "Science"
                        });
                });

            modelBuilder.Entity("questions_Data.Domain.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BonneReponse")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Enonce")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.Property<string>("Reponse1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Reponse2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Reponse3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Reponse4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BonneReponse = "Paris",
                            CategorieId = 2,
                            Enonce = "Quelle est la capitale de la France ?",
                            QuestionnaireId = 1,
                            Reponse1 = "Paris",
                            Reponse2 = "Londres",
                            Reponse3 = "Berlin",
                            Reponse4 = "Madrid"
                        },
                        new
                        {
                            Id = 2,
                            BonneReponse = "4",
                            CategorieId = 1,
                            Enonce = "Combien font 2 + 2 ?",
                            QuestionnaireId = 1,
                            Reponse1 = "3",
                            Reponse2 = "4",
                            Reponse3 = "5",
                            Reponse4 = "6"
                        },
                        new
                        {
                            Id = 3,
                            BonneReponse = "Oxygène",
                            CategorieId = 3,
                            Enonce = "Quel est l'élément chimique avec le symbole 'O' ?",
                            QuestionnaireId = 2,
                            Reponse1 = "Or",
                            Reponse2 = "Oxygène",
                            Reponse3 = "Argent",
                            Reponse4 = "Hydrogène"
                        });
                });

            modelBuilder.Entity("questions_Data.Domain.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Questionnaires", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Titre = "Quiz Général"
                        },
                        new
                        {
                            Id = 2,
                            Titre = "Quiz Avancé"
                        });
                });

            modelBuilder.Entity("questions_Data.Domain.Question", b =>
                {
                    b.HasOne("questions_Data.Domain.Categorie", "Categorie")
                        .WithMany("Questions")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("questions_Data.Domain.Questionnaire", "Questionnaire")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("questions_Data.Domain.Categorie", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("questions_Data.Domain.Questionnaire", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
